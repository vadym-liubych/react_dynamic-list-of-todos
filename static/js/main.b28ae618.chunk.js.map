{"version":3,"sources":["components/Form/Form.jsx","components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["Form","state","query","selectedType","handleTypeChange","event","filteredByType","filteredTodos","props","todos","setState","target","value","filter","todo","completed","filteredByQuery","title","includes","toLowerCase","addFilterTodos","handleInputChange","name","this","className","type","placeholder","onChange","React","Component","TodoList","selectUser","map","key","id","classNames","readOnly","checked","onClick","userId","API_URL","loadUsers","fetch","then","response","json","data","CurrentUser","user","setUser","prevProps","a","email","phone","clearUser","App","selectedUserId","todosFromServer","usersFromServer","users","length","ReactDOM","render","document","getElementById"],"mappings":"4aAIaA,G,MAAb,4MACEC,MAAQ,CACNC,MAAO,GACPC,aAAc,IAHlB,EAMEC,iBAAmB,SAACC,GAClB,IAMIC,EANEC,EAAa,YAAO,EAAKC,MAAMC,OAQrC,OANA,EAAKC,SAAS,CACZP,aAAcE,EAAMM,OAAOC,QAKrBP,EAAMM,OAAOC,OACnB,IAAK,YACHN,EAAiBC,EAAcM,QAAO,SAAAC,GAAI,OAAIA,EAAKC,aACnD,MACF,IAAK,SACHT,EAAiBC,EAAcM,QAAO,SAAAC,GAAI,OAAKA,EAAKC,aACpD,MACF,QACA,IAAK,MACHT,EAAiBC,EAIrB,IAAMS,EAAkBV,EAAeO,QAAO,SAACC,GAC7C,QAAmB,KAAfA,EAAKG,QAAkBH,EAAKG,QACvBH,EAAKG,MAAMC,SAAS,EAAKjB,MAAMC,MAAMiB,kBAMhD,EAAKX,MAAMY,eAAeJ,IApC9B,EAuCEK,kBAAoB,SAAChB,GACnB,MAAwBA,EAAMM,OAAtBW,EAAR,EAAQA,KAAMV,EAAd,EAAcA,MAEd,EAAKF,SAAL,eACGY,EAAOV,IAGV,IAAMI,EAAkB,EAAKR,MAAMC,MAAMI,QAAO,SAACC,GAC/C,QAAmB,KAAfA,EAAKG,QAAkBH,EAAKG,QACvBH,EAAKG,MAAMC,SAASN,EAAMO,kBAMjCb,EAAc,YAAOU,GAEzB,OAAQ,EAAKf,MAAME,cACjB,IAAK,YACHG,EAAiBU,EAAgBH,QAAO,SAAAC,GAAI,OAAIA,EAAKC,aAErD,MACF,IAAK,SACHT,EAAiBU,EAAgBH,QAAO,SAAAC,GAAI,OAAKA,EAAKC,aAEtD,MACF,QACA,IAAK,MACHT,EAAiBU,EAIrB,EAAKR,MAAMY,eAAed,IAvE9B,4CA0EE,WACE,MAAgCiB,KAAKtB,MAA7BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAEf,OACE,0BAAMqB,UAAU,QACd,2BACEA,UAAU,cACVC,KAAK,OACLC,YAAY,eACZJ,KAAK,QACLV,MAAOV,EACPyB,SAAUJ,KAAKF,oBAEjB,4BACEG,UAAU,cACVF,KAAK,eACLV,MAAOT,EACPwB,SAAUJ,KAAKnB,kBAEf,4BAAQQ,MAAM,OAAd,OACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,aAAd,mBA/FV,GAA0BgB,IAAMC,YCEnBC,EAAb,4MACE7B,MAAQ,CACNM,cAAe,EAAKC,MAAMC,OAF9B,EAKEW,eAAiB,SAACb,GAChB,EAAKG,SAAS,CAAEH,mBANpB,4CASE,WACE,IAAQA,EAAkBgB,KAAKtB,MAAvBM,cACR,EAA8BgB,KAAKf,MAA3BC,EAAR,EAAQA,MAAOsB,EAAf,EAAeA,WAEf,OACE,yBAAKP,UAAU,YACb,sCAEA,kBAAC,EAAD,CAAMf,MAAOA,EAAOW,eAAgBG,KAAKH,iBAEzC,yBAAKI,UAAU,4BACb,wBAAIA,UAAU,kBACXjB,EAAcyB,KAAI,SAAAlB,GAAI,OACrB,wBACEmB,IAAKnB,EAAKoB,GACVV,UAAWW,IAAW,iBAAkB,CACtC,0BAA2BrB,EAAKC,UAChC,6BAA8BD,EAAKC,aAGrC,+BACE,2BAAOU,KAAK,WAAWW,UAAQ,EAACC,QAASvB,EAAKC,YAC9C,2BAAID,EAAKG,QAGX,4BACEO,UAAWW,IAAW,SAAU,wBAAyB,CACvD,kCAAmCrB,EAAKC,YAE1CU,KAAK,SACLa,QAAS,kBAAMP,EAAWjB,EAAKyB,UALjC,YAQGzB,EAAKyB,mBA1CxB,GAA8BX,IAAMC,WCN9BW,G,MAAU,kCAQT,SAASC,EAAUF,GACxB,OAAOG,MAAM,GAAD,OAAIF,EAAJ,kBAAqBD,IAC9BI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAIA,EAASE,QCNxB,IAAMC,EAAb,4MACE9C,MAAQ,CACN+C,KAAM,MAFV,uDAKE,WACEzB,KAAK0B,YANT,gCASE,SAAmBC,GACbA,EAAUX,SAAWhB,KAAKf,MAAM+B,QAClChB,KAAK0B,YAXX,4DAeE,4BAAAE,EAAA,sEACqBV,EAAUlB,KAAKf,MAAM+B,QAD1C,OACQS,EADR,OAGEzB,KAAKb,SAAS,CAAEsC,SAHlB,gDAfF,0EAqBE,WACE,IAAQA,EAASzB,KAAKtB,MAAd+C,KAER,OAAKA,EAKH,yBAAKxB,UAAU,eACb,wBAAIA,UAAU,sBACZ,uDAAyBwB,EAAKd,MAEhC,wBAAIV,UAAU,qBAAqBwB,EAAK1B,MACxC,uBAAGE,UAAU,sBAAsBwB,EAAKI,OACxC,uBAAG5B,UAAU,sBAAsBwB,EAAKK,OAExC,4BACE5B,KAAK,SACLD,UAAU,4BACVc,QAASf,KAAKf,MAAM8C,WAHtB,UAZK,+CAzBb,GAAiC1B,IAAMC,WCiExB0B,E,4MA9DbtD,MAAQ,CACNQ,MAAO,GACP+C,eAAgB,G,EAalBzB,WAAa,SAACQ,GACZ,EAAK7B,SAAS,CACZ8C,eAAgBjB,K,EAIpBe,UAAY,WACV,EAAK5C,SAAS,CACZ8C,eAAgB,K,8FAlBpB,8BAAAL,EAAA,sEFVOT,MAAM,GAAD,OAAIF,EAAJ,WACTG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAIA,EAASE,QEQ7B,cACQW,EADR,gBAEgChB,IAFhC,OAEQiB,EAFR,OAIEnC,KAAKb,SAAS,CACZD,MAAOgD,EACPE,MAAOD,IANX,gD,0EAsBA,WACE,MAAyCnC,KAAKtB,MAAtCQ,EAAR,EAAQA,MAAO+C,EAAf,EAAeA,eAAgBG,EAA/B,EAA+BA,MAE/B,OACE,yBAAKnC,UAAU,OACb,yBAAKA,UAAU,gBACZf,EAAMmD,OACL,kBAAC,EAAD,CACEnD,MAAOA,EACPsB,WAAYR,KAAKQ,WACjBQ,OAAQiB,IAGV,4CAIJ,yBAAKhC,UAAU,gBACb,yBAAKA,UAAU,0BACZgC,EACC,kBAAC,EAAD,CACEjB,OAAQiB,EACRF,UAAW/B,KAAK+B,UAChBK,MAAOA,IAGT,0B,GAtDI/B,IAAMC,WCHxBgC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.b28ae618.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Form.scss';\n\nexport class Form extends React.Component {\n  state = {\n    query: '',\n    selectedType: '',\n  }\n\n  handleTypeChange = (event) => {\n    const filteredTodos = [...this.props.todos];\n\n    this.setState({\n      selectedType: event.target.value,\n    });\n\n    let filteredByType;\n\n    switch (event.target.value) {\n      case 'Completed':\n        filteredByType = filteredTodos.filter(todo => todo.completed);\n        break;\n      case 'Active':\n        filteredByType = filteredTodos.filter(todo => !todo.completed);\n        break;\n      default:\n      case 'All':\n        filteredByType = filteredTodos;\n        break;\n    }\n\n    const filteredByQuery = filteredByType.filter((todo) => {\n      if (todo.title === '' || !!todo.title) {\n        return todo.title.includes(this.state.query.toLowerCase());\n      }\n\n      return false;\n    });\n\n    this.props.addFilterTodos(filteredByQuery);\n  };\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n\n    const filteredByQuery = this.props.todos.filter((todo) => {\n      if (todo.title === '' || !!todo.title) {\n        return todo.title.includes(value.toLowerCase());\n      }\n\n      return false;\n    });\n\n    let filteredByType = [...filteredByQuery];\n\n    switch (this.state.selectedType) {\n      case 'Completed':\n        filteredByType = filteredByQuery.filter(todo => todo.completed);\n\n        break;\n      case 'Active':\n        filteredByType = filteredByQuery.filter(todo => !todo.completed);\n\n        break;\n      default:\n      case 'All':\n        filteredByType = filteredByQuery;\n        break;\n    }\n\n    this.props.addFilterTodos(filteredByType);\n  };\n\n  render() {\n    const { query, selectedType } = this.state;\n\n    return (\n      <form className=\"form\">\n        <input\n          className=\"form__input\"\n          type=\"text\"\n          placeholder=\"Search title\"\n          name=\"query\"\n          value={query}\n          onChange={this.handleInputChange}\n        />\n        <select\n          className=\"form__input\"\n          name=\"selectedType\"\n          value={selectedType}\n          onChange={this.handleTypeChange}\n        >\n          <option value=\"All\">All</option>\n          <option value=\"Active\">Active</option>\n          <option value=\"Completed\">Completed</option>\n        </select>\n      </form>\n    );\n  }\n}\n\nconst TodosType = PropTypes.arrayOf(\n  PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number,\n    title: PropTypes.string,\n  }),\n);\n\nForm.propTypes = {\n  todos: TodosType.isRequired,\n  addFilterTodos: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { Form } from '../Form';\n\nexport class TodoList extends React.Component {\n  state = {\n    filteredTodos: this.props.todos,\n  };\n\n  addFilterTodos = (filteredTodos) => {\n    this.setState({ filteredTodos });\n  };\n\n  render() {\n    const { filteredTodos } = this.state;\n    const { todos, selectUser } = this.props;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <Form todos={todos} addFilterTodos={this.addFilterTodos} />\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames('TodoList__item', {\n                  'TodoList__item--checked': todo.completed,\n                  'TodoList__item--unchecked': !todo.completed,\n                })}\n              >\n                <label>\n                  <input type=\"checkbox\" readOnly checked={todo.completed} />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className={classNames('button', 'TodoList__user-button', {\n                    'TodoList__user-button--selected': todo.completed,\n                  })}\n                  type=\"button\"\n                  onClick={() => selectUser(todo.userId)}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst TodosType = PropTypes.arrayOf(\n  PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.number,\n    userId: PropTypes.number,\n    completed: PropTypes.bool,\n  }),\n);\n\nTodoList.propTypes = {\n  todos: TodosType.isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","const API_URL = 'https://mate-api.herokuapp.com';\n\nexport function loadTodos() {\n  return fetch(`${API_URL}/todos`)\n    .then(response => response.json())\n    .then(response => response.data);\n}\n\nexport function loadUsers(userId) {\n  return fetch(`${API_URL}/users/${userId}`)\n    .then(response => response.json())\n    .then(response => response.data);\n}\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\nimport { loadUsers } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  };\n\n  componentDidMount() {\n    this.setUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.setUser();\n    }\n  }\n\n  async setUser() {\n    const user = await loadUsers(this.props.userId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    if (!user) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>{`Selected user: ${user.id}`}</span>\n        </h2>\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n        <button\n          type=\"button\"\n          className=\"CurrentUser__clear button\"\n          onClick={this.props.clearUser}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { loadTodos, loadUsers } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todosFromServer = await loadTodos();\n    const usersFromServer = await loadUsers();\n\n    this.setState({\n      todos: todosFromServer,\n      users: usersFromServer,\n    });\n  }\n\n  selectUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  };\n\n  clearUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  };\n\n  render() {\n    const { todos, selectedUserId, users } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          {todos.length ? (\n            <TodoList\n              todos={todos}\n              selectUser={this.selectUser}\n              userId={selectedUserId}\n            />\n          ) : (\n            <div>Loading...</div>\n          )}\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n                users={users}\n              />\n            ) : (\n              'No user selected'\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}